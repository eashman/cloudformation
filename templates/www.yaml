AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  DomainName:
    Type: String
    Default: example.net
Outputs:
  RedirDomain:
    Description: >-
      The CloudFront domain name for our Apex domain that we use to
      redirect to our SiteDomain. We will use this to add a CNAME from
      our DNS template.
    Value: !GetAtt ApexCloudFront.DomainName
    Export:
      Name: !Sub "${AWS::StackName}-RedirDomain"
  SiteDomain:
    Description: >-
      The CloudFront domain name for our site. We will use this to add
      a CNAME from our DNS template.
    Value: !GetAtt SiteCloudFront.DomainName
    Export:
      Name: !Sub "${AWS::StackName}-SiteDomain"
  StackName:
    Description: >-
      The stack name to use for templates that depend on this one.
    Value: !Ref 'AWS::StackName'
Resources:
  SSL:
    Type: 'AWS::CertificateManager::Certificate'
    Properties:
      DomainName: !Ref DomainName
      SubjectAlternativeNames:
        - !Sub "www.${DomainName}"
  ApexBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref DomainName
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Sub "www.${DomainName}"
          Protocol: https
  ApexCloudFront:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainName
        Enabled: True
        Origins:
          - DomainName: !Select
              - 1
              - !Split ["//", !GetAtt ApexBucket.WebsiteURL]
            Id: origin
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
        DefaultCacheBehavior:
          TargetOriginId: origin
          DefaultTTL: 5
          MaxTTL: 30
          ForwardedValues:
            QueryString: false
          ViewerProtocolPolicy: redirect-to-https
        ViewerCertificate:
          AcmCertificateArn: !Ref SSL
          SslSupportMethod: sni-only
  LogBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: LogDeliveryWrite
      BucketName: !Sub "www.${DomainName}-logs"
  SiteBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub "www.${DomainName}"
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
      LoggingConfiguration:
        DestinationBucketName: !Ref LogBucket
  SiteCloudFront:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Aliases:
          - !Sub "www.${DomainName}"
        Enabled: True
        Origins:
          - DomainName: !Select
              - 1
              - !Split ["//", !GetAtt SiteBucket.WebsiteURL]
            Id: origin
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
        DefaultCacheBehavior:
          TargetOriginId: origin
          DefaultTTL: 5
          MaxTTL: 30
          ForwardedValues:
            QueryString: false
          ViewerProtocolPolicy: redirect-to-https
        ViewerCertificate:
          AcmCertificateArn: !Ref SSL
          SslSupportMethod: sni-only
